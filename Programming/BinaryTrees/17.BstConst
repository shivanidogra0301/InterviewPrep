bst from inorder
mid, nikalo, mid will be root, then left will got to left 0 to mid -1
right mid+1 to end

bst from pre, value ki range bnage and tree bnaenge
 public static TreeNode constructBST(int[] arr, int lr, int rr){
        if(i >= arr.length || arr[i] < lr || arr[i] > rr) return null;

        TreeNode n = new TreeNode(arr[i++]);
        n.left = constructBST(arr, lr, n.val);
        n.right = constructBST(arr, n.val, rr);
        return n;
    }

for post, got the call from right subtree first.

public static TreeNode constructBST(int[] arr, int lr, int rr) {
        if (i < 0 || arr[i] < lr || arr[i] > rr)
            return null;

        TreeNode n = new TreeNode(arr[i--]);
        n.right = constructBST(arr, n.val, rr);
        n.left = constructBST(arr, lr, n.val);
        return n;
    }