https://leetcode.com/problems/132-pattern/description/

given array find triplet, i < j < k, but
nums[i] < nums[k] and nums[j] > nums[k] making it 132 pattern.

solution find prefix min, so that for every j you have a min, now for k we will
use online stock span approach, and check if min se bda hai to could be ans, put in stack
otherwise remove it because it cannot be an ans for anyone.

public boolean find132pattern(int[] nums) {
        int[] premin = new int[nums.length];
        premin[0] = nums[0];

        for(int i = 1; i < nums.length; i++){
            premin[i] = Math.min(premin[i-1], nums[i]);
        }

        Stack<Integer> st = new Stack<>();

        for(int i = nums.length-1; i >= 0; i--) {
            while(st.size() > 0 && st.peek() <= premin[i]) {
                st.pop();
            }

            if(st.size() > 0 && st.peek() > premin[i] && nums[i] > st.peek()) {
                return true;
            }

            st.push(nums[i]);
        }

        return false;
    }