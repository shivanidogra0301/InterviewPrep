1. Next greater element on right
Steps.
1. push the last element.
2. check from last second and pop until top have greater element. 
3. make peek your ans, if nothing present meaning no ans
4. push the current element.

int[] ngr = new int[arr.length];
Stack<Integer> st = new Stack<>();

st.push(arr[n-1]);
ngr[n-1] = -1;

for(int i = n-2; i >= 0; i--) {
    //removing all small element
    while(st.size() > 0 && arr[i] > st.peek()) {
        st.pop();
    }

    if(st.size() == 0) {
        ngr[i] = -1; // no ans present;
    }
    else{
        ngr[i] = st.peek();
    }
    st.push(arr[i]);
}

2. Stock span; check on left, if in any past day price is greater than current day,
then span will be total days from that day to current day.

Solution; 1. find ngl but this time put index as we want the total days.

int maxSpan = 0;
int[] ngr = new int[arr.length];
Stack<Integer> st = new Stack<>();

st.push(0);
ngr[0] = 0;

for(int i = 1; i < n; i++) {
    //removing all small element
    while(st.size() > 0 && arr[i] > arr[st.peek()]) {
        st.pop();
    }

    if(st.size() == 0) {
        ngr[i] = i+1; // no ans present;
    }
    else{
        ngr[i] = i - st.peek();
    }
    st.push(i);
}

