https://leetcode.com/problems/design-a-stack-with-increment-operation/description/
Design a stack that supports increment operations on its elements.

Implement the CustomStack class:

    CustomStack(int maxSize) Initializes the object with maxSize which is the maximum number of elements in the stack.
    void push(int x) Adds x to the top of the stack if the stack has not reached the maxSize.
    int pop() Pops and returns the top of the stack or -1 if the stack is empty.
    void inc(int k, int val) Increments the bottom k elements of the stack by val. If there are less than k elements in the stack, increment all the elements in the stack.


int[] val;
    int[] inc;
    int li;

    public CustomStack(int maxSize) {
        val = new int[maxSize];
        inc = new int[maxSize];
        li = -1;
    }
    
    public void push(int x) {
        if(li+1 == val.length) {
            return;
        }
        li++;
        val[li] = x;
        inc[li] = 0;
    }
    
    public int pop() {
        if(li == -1){
            return -1;
        }
        int ans = val[li] + inc[li];

        if(li > 0) {
            inc[li-1] += inc[li];
        }
        val[li] = 0;
        inc[li] = 0;
        li--;
        return ans;
    }
    
    public void increment(int k, int v) {
        int index = Math.min(k-1, li);
        if(li >= 0){
            inc[index] += v;
        }
    }