given car positions and it's speed find the car fleet
https://leetcode.com/problems/car-fleet/description/

here the trick is, sort the car on basis of distance.
now last element is taking 1 time to reach deestination then we will check from last
if that element is also reaching deestination in same or lest time meaning it
can come under one fleet.

 class Pair{
        int p;
        int s;
        Pair(int p, int s){
            this.p = p;
            this.s = s;
        }
    }
    public int carFleet(int target, int[] position, int[] speed) {
        if(position.length == 0){
            return 0;
        }
        Pair[] arr = new Pair[position.length];
        for(int i = 0; i < position.length; i++){
            arr[i] = new Pair(position[i],speed[i]);
        }
        Arrays.sort(arr,(a,b) -> a.p - b.p);
        int c = 1;
        double t = (target - arr[arr.length-1].p)*1.0/arr[arr.length-1].s;
        
        for(int i = arr.length -2; i >= 0; i--){
            double ct = (target - arr[i].p)*1.0/arr[i].s;
            if(ct > t){
                c++;
                t = ct;
            }
        }
        return c;
    }