Assume you have an array of length n initialized with all 0's and are given k update operations.
Each operation is represented as a triplet: [startIndex, endIndex, inc] which increments each element of subarray A[startIndex ... endIndex] (startIndex and endIndex inclusive) with inc.
Return the modified array after all k operations were executed.
Given:
length = 5,
updates = 
[
[1,  3,  2],
[2,  4,  3],
[0,  2, -2]
]
return [-2, 0, 3, 5, 3]
Explanation:
Initial state:
[ 0, 0, 0, 0, 0 ]
After applying operation [1, 3, 2]:
[ 0, 2, 2, 2, 0 ]
After applying operation [2, 4, 3]:
[ 0, 2, 5, 5, 3 ]
After applying operation [0, 2, -2]:
[-2, 0, 3, 5, 3 ]

Solution: if range is given 2,4 so 2 index m plus krdo and 4+1 5th index m same number minus krdo
for loop chlao or a[i] += a[i-1] krdo, hmne basically a[s] = 2 meaning s k aage sbhi index
m 2 plus krdo, then e k bad negative meaning vaha utna hi minus krna hoga.

public static int[] getModifiedArray(int length, int[][] updates) {
        // Write your code here
        int[] arr = new int[length];
        for(int[] q :  updates){
        	int s = q[0];
        	int e = q[1];
        	int v = q[2];
        	arr[s] += v;
        	if((e + 1) < length)
        		arr[e + 1] -= v;
        }

        for(int i = 1; i < length; i++){
        	arr[i] += arr[i - 1];
        }
        return arr;
    }