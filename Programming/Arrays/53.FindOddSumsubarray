Given an array of integers arr, return the number of subarrays with an odd sum.

Since the answer can be very large, return it modulo 109 + 7.

 

Example 1:

Input: arr = [1,3,5]
Output: 4
Explanation: All subarrays are [[1],[1,3],[1,3,5],[3],[3,5],[5]]
All sub-arrays sum are [1,4,9,3,8,5].
Odd sums are [1,9,3,5] so the answer is 4.


solution
1. we know o+o = e, o+e = o,  e + e = e
if we change it = e - o = o,  from 1st equation and o-e = o second equation
meainf agar odd se even htaye to be odd sum milega ans even se odd htaye to bhi

to hm prefix sum lete chlenge, if cursum is odd, to ab tak jitne bhi evensum prefix hai
unko htade, tab bhi ans odd hi rhega to vo subarray odd sum hoga, but one more thing becuase
sum odd hai to evensum na bhi htaye to bhi ek valid ans hai
so if curprefixsum is odd, ans += evenSumCount + 1;

public int numOfSubarrays(int[] arr) {
        long ans = 0;
        int evenSumCount = 0;
        int oddSumCount = 0;
        int sum = 0;
        for(int val: arr) {
            sum += val;

            if(sum % 2 == 0) {
                ans += oddSumCount;
                evenSumCount++;
            }
            else{
                ans += evenSumCount + 1;
                oddSumCount++;
            }
        } 

        return (int)(ans%(1000000007));
    }