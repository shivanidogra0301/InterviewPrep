
Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.

You have the following three operations permitted on a word:

    Insert a character
    Delete a character
    Replace a character


// agar c1 == c2, to pichli string ka and dp se lele
else hmare paas 3 choice h, s1 ko update krdu s2 car m, pichla ans dp[i-1][j-1]
ya s1 del, pichla ans dp[i-1][j]
ya s2 del, dp[i][j-1]

public int minDistance(String word1, String word2) {
        int[][] dp = new int[word1.length()+1][word2.length()+1];

        for(int i = 0; i < dp.length; i++){
            for(int j = 0; j < dp[0].length; j++){
                if(i == 0 && j == 0){
                    dp[i][j] = 0;
                }
                else if(i == 0){
                    dp[i][j] = dp[i][j-1]+1;
                }
                else if( j == 0){
                    dp[i][j] = dp[i-1][j] + 1;
                }
                else{
                    char c1 = word1.charAt(i-1);
                    char c2 = word2.charAt(j-1);

                    if(c1 == c2){
                        dp[i][j] = dp[i-1][j-1];
                    }
                    else{
                        dp[i][j] = 1 + Math.min(dp[i-1][j-1], Math.min(dp[i][j-1], dp[i-1][j]));
                    }
                }
            }
        }
        return dp[word1.length()][word2.length()];
    }