
There is only one character 'A' on the screen of a notepad. You can perform one of two operations on this notepad for each step:

    Copy All: You can copy all the characters present on the screen (a partial copy is not allowed).
    Paste: You can paste the characters which are copied last time.

Given an integer n, return the minimum number of operations to get the character 'A' exactly n times on the screen.

 

Example 1:

Input: n = 3
Output: 3
Explanation: Initially, we have one character 'A'.
In step 1, we use Copy All operation.
In step 2, we use Paste operation to get 'AA'.
In step 3, we use Paste operation to get 'AAA'.


naive approach to check all possible solutions

A only paste will do nothing, we need to have atleast one copy before pasting
in starting given AA cur string and step 2 
public int minSteps(int n) {
        if(n == 1) {
            return 0;
        }
        return minStepsHandler(n, "AA", 2, "A");
    }

    public int minStepsHandler(int len, String cur, int steps, String prev) {
        if(cur.length() == len) {
            return steps;
        }
        if(cur.length() > len) {
            return Integer.MAX_VALUE;
        }
        return Math.min(minStepsHandler(len, cur + cur, steps+2, cur),
        minStepsHandler(len, cur + prev, steps+1, prev));
    }


Best way
It take 2 ops to double, 3 ops to triple, ...
    if n % 2 == 0, then f(n) = f(n/2) + 2
    if n % 3 == 0, then f(n) = f(n/3) + 3
    2 * 2 = 2 + 2; 2 * 3 > 2 + 3; 4 * 4 > 4 + 4; so it is always better to divide whenever possible.
    now it became a problem for finding all possible factors;

public int minSteps(int n) {
        if (n == 1) return 0;
        for (int i = 2; i < n; i++)
            if (n % i == 0) return i + minSteps(n / i);
        return n;
    }